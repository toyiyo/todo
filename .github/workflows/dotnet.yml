name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore aspnet-core/toyiyo.todo.sln
    - name: Build
      run: dotnet build aspnet-core/toyiyo.todo.sln --no-restore

  test:
    needs: build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Test with coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        DefaultPassword: ${{ secrets.DEFAULT_PASSWORD_FOR_TEST }}
        GoogleClientId: ${{ secrets.DEFAULT_PASSWORD_FOR_TEST }}
        GoogleClietSecret: ${{ secrets.DEFAULT_PASSWORD_FOR_TEST }}
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet-coverage collect 'dotnet test aspnet-core/toyiyo.todo.sln' -f xml  -o 'coverage.xml'
    - name: Upload coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.xml

  sonar-scan:
    needs: test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore aspnet-core/toyiyo.todo.sln
    - name: Download coverage results
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Run Sonar scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"toyiyo_todo" /o:"toyiyo" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        dotnet build aspnet-core/toyiyo.todo.sln
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
